<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.13.2 on win32)" generated="20250408 22:30:37.414" rpa="false" schemaversion="4">
<suite id="s1" name="Employee Tests" source="E:\ERP\dev\CursorAI\auto-dev\employee_tests.robot">
<kw name="Setup Test Suite" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>employee_api</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250408 22:30:39.293" level="INFO">Creating Session using : alias=employee_api, url=http://localhost:8000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250408 22:30:39.293" endtime="20250408 22:30:39.293"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${FRONTEND_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250408 22:30:39.294" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20250408 22:30:39.294" endtime="20250408 22:30:42.715"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250408 22:30:42.715" endtime="20250408 22:30:42.818"/>
</kw>
<status status="PASS" starttime="20250408 22:30:39.292" endtime="20250408 22:30:42.818"/>
</kw>
<test id="s1-t1" name="Create New Employee Via API" line="134">
<kw name="Generate Random Employee Data">
<var>${employee_data}</var>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20250408 22:30:42.825" level="INFO">${name} = William Nielsen DDS</msg>
<status status="PASS" starttime="20250408 22:30:42.822" endtime="20250408 22:30:42.825"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${department}</var>
<msg timestamp="20250408 22:30:42.826" level="INFO">${department} = Fast food restaurant manager</msg>
<status status="PASS" starttime="20250408 22:30:42.825" endtime="20250408 22:30:42.826"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${position}</var>
<msg timestamp="20250408 22:30:42.827" level="INFO">${position} = Financial manager</msg>
<status status="PASS" starttime="20250408 22:30:42.826" endtime="20250408 22:30:42.827"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{employee}</var>
<arg>name=${name}</arg>
<arg>department=${department}</arg>
<arg>position=${position}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250408 22:30:42.830" level="INFO">&amp;{employee} = { name=William Nielsen DDS | department=Fast food restaurant manager | position=Financial manager }</msg>
<status status="PASS" starttime="20250408 22:30:42.827" endtime="20250408 22:30:42.830"/>
</kw>
<return>
<value>&amp;{employee}</value>
<status status="PASS" starttime="20250408 22:30:42.831" endtime="20250408 22:30:42.831"/>
</return>
<msg timestamp="20250408 22:30:42.832" level="INFO">${employee_data} = {'name': 'William Nielsen DDS', 'department': 'Fast food restaurant manager', 'position': 'Financial manager'}</msg>
<status status="PASS" starttime="20250408 22:30:42.821" endtime="20250408 22:30:42.832"/>
</kw>
<kw name="Create Employee Via API">
<var>${response}</var>
<arg>${employee_data}</arg>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/</arg>
<arg>json=${employee_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:30:44.953" level="INFO">POST Request : url=http://localhost:8000/employees/ 
 path_url=/employees/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '110', 'Content-Type': 'application/json'} 
 body=b'{"name": "William Nielsen DDS", "department": "Fast food restaurant manager", "position": "Financial manager"}' 
 </msg>
<msg timestamp="20250408 22:30:44.953" level="INFO">POST Response : url=http://localhost:8000/employees/ 
 status=201, reason=Created 
 headers={'date': 'Tue, 08 Apr 2025 17:00:44 GMT', 'server': 'uvicorn', 'content-length': '113', 'content-type': 'application/json'} 
 body={"name":"William Nielsen DDS","department":"Fast food restaurant manager","position":"Financial manager","id":91} 
 </msg>
<msg timestamp="20250408 22:30:44.954" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250408 22:30:42.833" endtime="20250408 22:30:44.954"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250408 22:30:44.954" endtime="20250408 22:30:44.955"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20250408 22:30:44.955" endtime="20250408 22:30:44.955"/>
</return>
<msg timestamp="20250408 22:30:44.957" level="INFO">${response} = {'name': 'William Nielsen DDS', 'department': 'Fast food restaurant manager', 'position': 'Financial manager', 'id': 91}</msg>
<status status="PASS" starttime="20250408 22:30:42.832" endtime="20250408 22:30:44.957"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id_str}</var>
<arg>${response}[id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250408 22:30:44.958" level="INFO">${id_str} = 91</msg>
<status status="PASS" starttime="20250408 22:30:44.958" endtime="20250408 22:30:44.958"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${id_str}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250408 22:30:44.959" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20250408 22:30:44.959" endtime="20250408 22:30:44.959"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response}[name]</arg>
<arg>${employee_data}[name]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250408 22:30:44.960" endtime="20250408 22:30:44.960"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response}[department]</arg>
<arg>${employee_data}[department]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250408 22:30:44.961" endtime="20250408 22:30:44.961"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response}[position]</arg>
<arg>${employee_data}[position]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250408 22:30:44.962" endtime="20250408 22:30:44.962"/>
</kw>
<status status="PASS" starttime="20250408 22:30:42.818" endtime="20250408 22:30:44.962"/>
</test>
<test id="s1-t2" name="Create New Employee Via UI" line="144">
<kw name="Generate Random Employee Data">
<var>${employee_data}</var>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20250408 22:30:44.966" level="INFO">${name} = Erik Dean</msg>
<status status="PASS" starttime="20250408 22:30:44.965" endtime="20250408 22:30:44.966"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${department}</var>
<msg timestamp="20250408 22:30:44.967" level="INFO">${department} = Engineer, energy</msg>
<status status="PASS" starttime="20250408 22:30:44.967" endtime="20250408 22:30:44.967"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${position}</var>
<msg timestamp="20250408 22:30:44.968" level="INFO">${position} = Geophysicist/field seismologist</msg>
<status status="PASS" starttime="20250408 22:30:44.967" endtime="20250408 22:30:44.968"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{employee}</var>
<arg>name=${name}</arg>
<arg>department=${department}</arg>
<arg>position=${position}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250408 22:30:44.970" level="INFO">&amp;{employee} = { name=Erik Dean | department=Engineer, energy | position=Geophysicist/field seismologist }</msg>
<status status="PASS" starttime="20250408 22:30:44.968" endtime="20250408 22:30:44.970"/>
</kw>
<return>
<value>&amp;{employee}</value>
<status status="PASS" starttime="20250408 22:30:44.970" endtime="20250408 22:30:44.970"/>
</return>
<msg timestamp="20250408 22:30:44.971" level="INFO">${employee_data} = {'name': 'Erik Dean', 'department': 'Engineer, energy', 'position': 'Geophysicist/field seismologist'}</msg>
<status status="PASS" starttime="20250408 22:30:44.964" endtime="20250408 22:30:44.971"/>
</kw>
<kw name="Create Employee Via UI">
<arg>${employee_data}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_EMPLOYEE_BTN}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:44.974" level="INFO">Clicking element 'css:button[onclick='showAddModal()']'.</msg>
<status status="PASS" starttime="20250408 22:30:44.972" endtime="20250408 22:30:45.160"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250408 22:30:45.160" endtime="20250408 22:30:45.592"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${NAME_INPUT}</arg>
<arg>${employee_data}[name]</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:45.595" level="INFO">Typing text 'Erik Dean' into text field 'id:name'.</msg>
<status status="PASS" starttime="20250408 22:30:45.592" endtime="20250408 22:30:45.834"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEPARTMENT_INPUT}</arg>
<arg>${employee_data}[department]</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:45.836" level="INFO">Typing text 'Engineer, energy' into text field 'id:department'.</msg>
<status status="PASS" starttime="20250408 22:30:45.835" endtime="20250408 22:30:46.145"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${POSITION_INPUT}</arg>
<arg>${employee_data}[position]</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:46.147" level="INFO">Typing text 'Geophysicist/field seismologist' into text field 'id:position'.</msg>
<status status="PASS" starttime="20250408 22:30:46.145" endtime="20250408 22:30:46.381"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BTN}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:46.383" level="INFO">Clicking element 'css:button[onclick='saveEmployee()']'.</msg>
<status status="PASS" starttime="20250408 22:30:46.382" endtime="20250408 22:30:46.509"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${employee_data}[name]</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250408 22:30:46.509" endtime="20250408 22:30:47.059"/>
</kw>
<status status="PASS" starttime="20250408 22:30:44.971" endtime="20250408 22:30:47.059"/>
</kw>
<kw name="Verify Employee Exists">
<arg>${employee_data}[name]</arg>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${employee_name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250408 22:30:47.096" level="INFO">Current page contains text 'Erik Dean'.</msg>
<status status="PASS" starttime="20250408 22:30:47.061" endtime="20250408 22:30:47.096"/>
</kw>
<status status="PASS" starttime="20250408 22:30:47.060" endtime="20250408 22:30:47.096"/>
</kw>
<status status="PASS" starttime="20250408 22:30:44.963" endtime="20250408 22:30:47.097"/>
</test>
<test id="s1-t3" name="Search Employee" line="149">
<kw name="Generate Random Employee Data">
<var>${employee_data}</var>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20250408 22:30:47.101" level="INFO">${name} = Barbara Maldonado</msg>
<status status="PASS" starttime="20250408 22:30:47.100" endtime="20250408 22:30:47.101"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${department}</var>
<msg timestamp="20250408 22:30:47.102" level="INFO">${department} = Acupuncturist</msg>
<status status="PASS" starttime="20250408 22:30:47.102" endtime="20250408 22:30:47.102"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${position}</var>
<msg timestamp="20250408 22:30:47.103" level="INFO">${position} = Librarian, academic</msg>
<status status="PASS" starttime="20250408 22:30:47.103" endtime="20250408 22:30:47.103"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{employee}</var>
<arg>name=${name}</arg>
<arg>department=${department}</arg>
<arg>position=${position}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250408 22:30:47.105" level="INFO">&amp;{employee} = { name=Barbara Maldonado | department=Acupuncturist | position=Librarian, academic }</msg>
<status status="PASS" starttime="20250408 22:30:47.103" endtime="20250408 22:30:47.105"/>
</kw>
<return>
<value>&amp;{employee}</value>
<status status="PASS" starttime="20250408 22:30:47.105" endtime="20250408 22:30:47.105"/>
</return>
<msg timestamp="20250408 22:30:47.106" level="INFO">${employee_data} = {'name': 'Barbara Maldonado', 'department': 'Acupuncturist', 'position': 'Librarian, academic'}</msg>
<status status="PASS" starttime="20250408 22:30:47.099" endtime="20250408 22:30:47.106"/>
</kw>
<kw name="Create Employee Via UI">
<arg>${employee_data}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_EMPLOYEE_BTN}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:47.107" level="INFO">Clicking element 'css:button[onclick='showAddModal()']'.</msg>
<status status="PASS" starttime="20250408 22:30:47.106" endtime="20250408 22:30:47.309"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250408 22:30:47.309" endtime="20250408 22:30:47.608"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${NAME_INPUT}</arg>
<arg>${employee_data}[name]</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:47.608" level="INFO">Typing text 'Barbara Maldonado' into text field 'id:name'.</msg>
<status status="PASS" starttime="20250408 22:30:47.608" endtime="20250408 22:30:47.895"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEPARTMENT_INPUT}</arg>
<arg>${employee_data}[department]</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:47.897" level="INFO">Typing text 'Acupuncturist' into text field 'id:department'.</msg>
<status status="PASS" starttime="20250408 22:30:47.895" endtime="20250408 22:30:48.082"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${POSITION_INPUT}</arg>
<arg>${employee_data}[position]</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:48.083" level="INFO">Typing text 'Librarian, academic' into text field 'id:position'.</msg>
<status status="PASS" starttime="20250408 22:30:48.082" endtime="20250408 22:30:48.327"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BTN}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:48.328" level="INFO">Clicking element 'css:button[onclick='saveEmployee()']'.</msg>
<status status="PASS" starttime="20250408 22:30:48.327" endtime="20250408 22:30:48.482"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${employee_data}[name]</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250408 22:30:48.483" endtime="20250408 22:30:48.914"/>
</kw>
<status status="PASS" starttime="20250408 22:30:47.106" endtime="20250408 22:30:48.914"/>
</kw>
<kw name="Search Employee">
<arg>${employee_data}[name]</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${SEARCH_INPUT}</arg>
<arg>${search_term}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:48.917" level="INFO">Typing text 'Barbara Maldonado' into text field 'id:searchInput'.</msg>
<status status="PASS" starttime="20250408 22:30:48.915" endtime="20250408 22:30:49.236"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250408 22:30:50.237" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250408 22:30:49.236" endtime="20250408 22:30:50.238"/>
</kw>
<status status="PASS" starttime="20250408 22:30:48.914" endtime="20250408 22:30:50.238"/>
</kw>
<kw name="Verify Employee Exists">
<arg>${employee_data}[name]</arg>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${employee_name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250408 22:30:50.292" level="INFO">Current page contains text 'Barbara Maldonado'.</msg>
<status status="PASS" starttime="20250408 22:30:50.239" endtime="20250408 22:30:50.292"/>
</kw>
<status status="PASS" starttime="20250408 22:30:50.238" endtime="20250408 22:30:50.293"/>
</kw>
<status status="PASS" starttime="20250408 22:30:47.099" endtime="20250408 22:30:50.293"/>
</test>
<test id="s1-t4" name="Update Employee" line="155">
<kw name="Generate Random Employee Data">
<var>${employee_data}</var>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20250408 22:30:50.294" level="INFO">${name} = Cody Reynolds</msg>
<status status="PASS" starttime="20250408 22:30:50.294" endtime="20250408 22:30:50.294"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${department}</var>
<msg timestamp="20250408 22:30:50.295" level="INFO">${department} = Surveyor, insurance</msg>
<status status="PASS" starttime="20250408 22:30:50.294" endtime="20250408 22:30:50.295"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${position}</var>
<msg timestamp="20250408 22:30:50.295" level="INFO">${position} = Interior and spatial designer</msg>
<status status="PASS" starttime="20250408 22:30:50.295" endtime="20250408 22:30:50.295"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{employee}</var>
<arg>name=${name}</arg>
<arg>department=${department}</arg>
<arg>position=${position}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250408 22:30:50.296" level="INFO">&amp;{employee} = { name=Cody Reynolds | department=Surveyor, insurance | position=Interior and spatial designer }</msg>
<status status="PASS" starttime="20250408 22:30:50.295" endtime="20250408 22:30:50.296"/>
</kw>
<return>
<value>&amp;{employee}</value>
<status status="PASS" starttime="20250408 22:30:50.296" endtime="20250408 22:30:50.296"/>
</return>
<msg timestamp="20250408 22:30:50.296" level="INFO">${employee_data} = {'name': 'Cody Reynolds', 'department': 'Surveyor, insurance', 'position': 'Interior and spatial designer'}</msg>
<status status="PASS" starttime="20250408 22:30:50.294" endtime="20250408 22:30:50.296"/>
</kw>
<kw name="Create Employee Via API">
<var>${response}</var>
<arg>${employee_data}</arg>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/</arg>
<arg>json=${employee_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:30:52.418" level="INFO">POST Request : url=http://localhost:8000/employees/ 
 path_url=/employees/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '107', 'Content-Type': 'application/json'} 
 body=b'{"name": "Cody Reynolds", "department": "Surveyor, insurance", "position": "Interior and spatial designer"}' 
 </msg>
<msg timestamp="20250408 22:30:52.418" level="INFO">POST Response : url=http://localhost:8000/employees/ 
 status=201, reason=Created 
 headers={'date': 'Tue, 08 Apr 2025 17:00:51 GMT', 'server': 'uvicorn', 'content-length': '110', 'content-type': 'application/json'} 
 body={"name":"Cody Reynolds","department":"Surveyor, insurance","position":"Interior and spatial designer","id":94} 
 </msg>
<msg timestamp="20250408 22:30:52.418" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250408 22:30:50.296" endtime="20250408 22:30:52.418"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250408 22:30:52.418" endtime="20250408 22:30:52.419"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20250408 22:30:52.419" endtime="20250408 22:30:52.419"/>
</return>
<msg timestamp="20250408 22:30:52.419" level="INFO">${response} = {'name': 'Cody Reynolds', 'department': 'Surveyor, insurance', 'position': 'Interior and spatial designer', 'id': 94}</msg>
<status status="PASS" starttime="20250408 22:30:50.296" endtime="20250408 22:30:52.419"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${employee_id}</var>
<arg>${response}[id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250408 22:30:52.420" level="INFO">${employee_id} = 94</msg>
<status status="PASS" starttime="20250408 22:30:52.420" endtime="20250408 22:30:52.420"/>
</kw>
<kw name="Generate Random Employee Data">
<var>${updated_data}</var>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20250408 22:30:52.421" level="INFO">${name} = Gina Thompson</msg>
<status status="PASS" starttime="20250408 22:30:52.420" endtime="20250408 22:30:52.421"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${department}</var>
<msg timestamp="20250408 22:30:52.421" level="INFO">${department} = Marketing executive</msg>
<status status="PASS" starttime="20250408 22:30:52.421" endtime="20250408 22:30:52.421"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${position}</var>
<msg timestamp="20250408 22:30:52.421" level="INFO">${position} = Pharmacist, hospital</msg>
<status status="PASS" starttime="20250408 22:30:52.421" endtime="20250408 22:30:52.421"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{employee}</var>
<arg>name=${name}</arg>
<arg>department=${department}</arg>
<arg>position=${position}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250408 22:30:52.422" level="INFO">&amp;{employee} = { name=Gina Thompson | department=Marketing executive | position=Pharmacist, hospital }</msg>
<status status="PASS" starttime="20250408 22:30:52.421" endtime="20250408 22:30:52.422"/>
</kw>
<return>
<value>&amp;{employee}</value>
<status status="PASS" starttime="20250408 22:30:52.422" endtime="20250408 22:30:52.422"/>
</return>
<msg timestamp="20250408 22:30:52.422" level="INFO">${updated_data} = {'name': 'Gina Thompson', 'department': 'Marketing executive', 'position': 'Pharmacist, hospital'}</msg>
<status status="PASS" starttime="20250408 22:30:52.420" endtime="20250408 22:30:52.422"/>
</kw>
<kw name="Update Employee Via API">
<var>${update_response}</var>
<arg>${employee_id}</arg>
<arg>${updated_data}</arg>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/${employee_id}</arg>
<arg>json=${employee_data}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:30:52.448" level="INFO">PUT Request : url=http://localhost:8000/employees/94 
 path_url=/employees/94 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '98', 'Content-Type': 'application/json'} 
 body=b'{"name": "Gina Thompson", "department": "Marketing executive", "position": "Pharmacist, hospital"}' 
 </msg>
<msg timestamp="20250408 22:30:52.448" level="INFO">PUT Response : url=http://localhost:8000/employees/94 
 status=200, reason=OK 
 headers={'date': 'Tue, 08 Apr 2025 17:00:51 GMT', 'server': 'uvicorn', 'content-length': '101', 'content-type': 'application/json'} 
 body={"name":"Gina Thompson","department":"Marketing executive","position":"Pharmacist, hospital","id":94} 
 </msg>
<msg timestamp="20250408 22:30:52.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250408 22:30:52.423" endtime="20250408 22:30:52.448"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250408 22:30:52.449" endtime="20250408 22:30:52.449"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20250408 22:30:52.449" endtime="20250408 22:30:52.449"/>
</return>
<msg timestamp="20250408 22:30:52.450" level="INFO">${update_response} = {'name': 'Gina Thompson', 'department': 'Marketing executive', 'position': 'Pharmacist, hospital', 'id': 94}</msg>
<status status="PASS" starttime="20250408 22:30:52.422" endtime="20250408 22:30:52.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${update_response}[name]</arg>
<arg>${updated_data}[name]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250408 22:30:52.450" endtime="20250408 22:30:52.451"/>
</kw>
<status status="PASS" starttime="20250408 22:30:50.293" endtime="20250408 22:30:52.451"/>
</test>
<test id="s1-t5" name="Delete Employee" line="164">
<kw name="Generate Random Employee Data">
<var>${employee_data}</var>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20250408 22:30:52.453" level="INFO">${name} = Vickie Gray</msg>
<status status="PASS" starttime="20250408 22:30:52.452" endtime="20250408 22:30:52.453"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${department}</var>
<msg timestamp="20250408 22:30:52.454" level="INFO">${department} = Electronics engineer</msg>
<status status="PASS" starttime="20250408 22:30:52.453" endtime="20250408 22:30:52.454"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${position}</var>
<msg timestamp="20250408 22:30:52.454" level="INFO">${position} = Risk analyst</msg>
<status status="PASS" starttime="20250408 22:30:52.454" endtime="20250408 22:30:52.454"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{employee}</var>
<arg>name=${name}</arg>
<arg>department=${department}</arg>
<arg>position=${position}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250408 22:30:52.455" level="INFO">&amp;{employee} = { name=Vickie Gray | department=Electronics engineer | position=Risk analyst }</msg>
<status status="PASS" starttime="20250408 22:30:52.454" endtime="20250408 22:30:52.455"/>
</kw>
<return>
<value>&amp;{employee}</value>
<status status="PASS" starttime="20250408 22:30:52.455" endtime="20250408 22:30:52.455"/>
</return>
<msg timestamp="20250408 22:30:52.455" level="INFO">${employee_data} = {'name': 'Vickie Gray', 'department': 'Electronics engineer', 'position': 'Risk analyst'}</msg>
<status status="PASS" starttime="20250408 22:30:52.452" endtime="20250408 22:30:52.455"/>
</kw>
<kw name="Create Employee Via API">
<var>${response}</var>
<arg>${employee_data}</arg>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/</arg>
<arg>json=${employee_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:30:52.475" level="INFO">POST Request : url=http://localhost:8000/employees/ 
 path_url=/employees/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '89', 'Content-Type': 'application/json'} 
 body=b'{"name": "Vickie Gray", "department": "Electronics engineer", "position": "Risk analyst"}' 
 </msg>
<msg timestamp="20250408 22:30:52.475" level="INFO">POST Response : url=http://localhost:8000/employees/ 
 status=201, reason=Created 
 headers={'date': 'Tue, 08 Apr 2025 17:00:51 GMT', 'server': 'uvicorn', 'content-length': '92', 'content-type': 'application/json'} 
 body={"name":"Vickie Gray","department":"Electronics engineer","position":"Risk analyst","id":95} 
 </msg>
<msg timestamp="20250408 22:30:52.475" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250408 22:30:52.456" endtime="20250408 22:30:52.475"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250408 22:30:52.476" endtime="20250408 22:30:52.476"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20250408 22:30:52.476" endtime="20250408 22:30:52.476"/>
</return>
<msg timestamp="20250408 22:30:52.477" level="INFO">${response} = {'name': 'Vickie Gray', 'department': 'Electronics engineer', 'position': 'Risk analyst', 'id': 95}</msg>
<status status="PASS" starttime="20250408 22:30:52.456" endtime="20250408 22:30:52.477"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${employee_id}</var>
<arg>${response}[id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250408 22:30:52.478" level="INFO">${employee_id} = 95</msg>
<status status="PASS" starttime="20250408 22:30:52.477" endtime="20250408 22:30:52.478"/>
</kw>
<kw name="Delete Employee Via API">
<arg>${employee_id}</arg>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/${employee_id}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:30:52.498" level="INFO">DELETE Request : url=http://localhost:8000/employees/95 
 path_url=/employees/95 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20250408 22:30:52.499" level="INFO">DELETE Response : url=http://localhost:8000/employees/95 
 status=200, reason=OK 
 headers={'date': 'Tue, 08 Apr 2025 17:00:51 GMT', 'server': 'uvicorn', 'content-length': '43', 'content-type': 'application/json'} 
 body={"message":"Employee deleted successfully"} 
 </msg>
<msg timestamp="20250408 22:30:52.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250408 22:30:52.478" endtime="20250408 22:30:52.499"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250408 22:30:52.499" endtime="20250408 22:30:52.499"/>
</kw>
<status status="PASS" starttime="20250408 22:30:52.478" endtime="20250408 22:30:52.499"/>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20250408 22:30:52.500" endtime="20250408 22:30:52.859"/>
</kw>
<kw name="Verify Employee Does Not Exist">
<arg>${employee_data}[name]</arg>
<kw name="Page Should Not Contain" library="SeleniumLibrary">
<arg>${employee_name}</arg>
<doc>Verifies the current page does not contain ``text``.</doc>
<msg timestamp="20250408 22:30:52.931" level="INFO">Current page does not contain text 'Vickie Gray'.</msg>
<status status="PASS" starttime="20250408 22:30:52.860" endtime="20250408 22:30:52.932"/>
</kw>
<status status="PASS" starttime="20250408 22:30:52.859" endtime="20250408 22:30:52.932"/>
</kw>
<status status="PASS" starttime="20250408 22:30:52.452" endtime="20250408 22:30:52.932"/>
</test>
<test id="s1-t6" name="Delete Multiple Employees" line="173">
<kw name="Generate Random Employee Data">
<var>${employee_data1}</var>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20250408 22:30:52.934" level="INFO">${name} = Paul Lopez</msg>
<status status="PASS" starttime="20250408 22:30:52.933" endtime="20250408 22:30:52.935"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${department}</var>
<msg timestamp="20250408 22:30:52.935" level="INFO">${department} = Magazine features editor</msg>
<status status="PASS" starttime="20250408 22:30:52.935" endtime="20250408 22:30:52.935"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${position}</var>
<msg timestamp="20250408 22:30:52.935" level="INFO">${position} = Civil engineer, consulting</msg>
<status status="PASS" starttime="20250408 22:30:52.935" endtime="20250408 22:30:52.935"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{employee}</var>
<arg>name=${name}</arg>
<arg>department=${department}</arg>
<arg>position=${position}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250408 22:30:52.936" level="INFO">&amp;{employee} = { name=Paul Lopez | department=Magazine features editor | position=Civil engineer, consulting }</msg>
<status status="PASS" starttime="20250408 22:30:52.936" endtime="20250408 22:30:52.936"/>
</kw>
<return>
<value>&amp;{employee}</value>
<status status="PASS" starttime="20250408 22:30:52.936" endtime="20250408 22:30:52.936"/>
</return>
<msg timestamp="20250408 22:30:52.937" level="INFO">${employee_data1} = {'name': 'Paul Lopez', 'department': 'Magazine features editor', 'position': 'Civil engineer, consulting'}</msg>
<status status="PASS" starttime="20250408 22:30:52.933" endtime="20250408 22:30:52.937"/>
</kw>
<kw name="Create Employee Via API">
<var>${response1}</var>
<arg>${employee_data1}</arg>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/</arg>
<arg>json=${employee_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:30:52.987" level="INFO">POST Request : url=http://localhost:8000/employees/ 
 path_url=/employees/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '106', 'Content-Type': 'application/json'} 
 body=b'{"name": "Paul Lopez", "department": "Magazine features editor", "position": "Civil engineer, consulting"}' 
 </msg>
<msg timestamp="20250408 22:30:52.987" level="INFO">POST Response : url=http://localhost:8000/employees/ 
 status=201, reason=Created 
 headers={'date': 'Tue, 08 Apr 2025 17:00:52 GMT', 'server': 'uvicorn', 'content-length': '109', 'content-type': 'application/json'} 
 body={"name":"Paul Lopez","department":"Magazine features editor","position":"Civil engineer, consulting","id":95} 
 </msg>
<msg timestamp="20250408 22:30:52.988" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250408 22:30:52.937" endtime="20250408 22:30:52.988"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250408 22:30:52.988" endtime="20250408 22:30:52.988"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20250408 22:30:52.988" endtime="20250408 22:30:52.988"/>
</return>
<msg timestamp="20250408 22:30:52.989" level="INFO">${response1} = {'name': 'Paul Lopez', 'department': 'Magazine features editor', 'position': 'Civil engineer, consulting', 'id': 95}</msg>
<status status="PASS" starttime="20250408 22:30:52.937" endtime="20250408 22:30:52.989"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${employee_id1}</var>
<arg>${response1}[id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250408 22:30:52.990" level="INFO">${employee_id1} = 95</msg>
<status status="PASS" starttime="20250408 22:30:52.990" endtime="20250408 22:30:52.990"/>
</kw>
<kw name="Generate Random Employee Data">
<var>${employee_data2}</var>
<kw name="Name" library="FakerLibrary">
<var>${name}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20250408 22:30:52.991" level="INFO">${name} = Tiffany Banks</msg>
<status status="PASS" starttime="20250408 22:30:52.990" endtime="20250408 22:30:52.991"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${department}</var>
<msg timestamp="20250408 22:30:52.992" level="INFO">${department} = Geoscientist</msg>
<status status="PASS" starttime="20250408 22:30:52.991" endtime="20250408 22:30:52.992"/>
</kw>
<kw name="Job" library="FakerLibrary">
<var>${position}</var>
<msg timestamp="20250408 22:30:52.992" level="INFO">${position} = Dance movement psychotherapist</msg>
<status status="PASS" starttime="20250408 22:30:52.992" endtime="20250408 22:30:52.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{employee}</var>
<arg>name=${name}</arg>
<arg>department=${department}</arg>
<arg>position=${position}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250408 22:30:52.993" level="INFO">&amp;{employee} = { name=Tiffany Banks | department=Geoscientist | position=Dance movement psychotherapist }</msg>
<status status="PASS" starttime="20250408 22:30:52.992" endtime="20250408 22:30:52.993"/>
</kw>
<return>
<value>&amp;{employee}</value>
<status status="PASS" starttime="20250408 22:30:52.993" endtime="20250408 22:30:52.993"/>
</return>
<msg timestamp="20250408 22:30:52.993" level="INFO">${employee_data2} = {'name': 'Tiffany Banks', 'department': 'Geoscientist', 'position': 'Dance movement psychotherapist'}</msg>
<status status="PASS" starttime="20250408 22:30:52.990" endtime="20250408 22:30:52.993"/>
</kw>
<kw name="Create Employee Via API">
<var>${response2}</var>
<arg>${employee_data2}</arg>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/</arg>
<arg>json=${employee_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:30:53.019" level="INFO">POST Request : url=http://localhost:8000/employees/ 
 path_url=/employees/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '101', 'Content-Type': 'application/json'} 
 body=b'{"name": "Tiffany Banks", "department": "Geoscientist", "position": "Dance movement psychotherapist"}' 
 </msg>
<msg timestamp="20250408 22:30:53.019" level="INFO">POST Response : url=http://localhost:8000/employees/ 
 status=201, reason=Created 
 headers={'date': 'Tue, 08 Apr 2025 17:00:52 GMT', 'server': 'uvicorn', 'content-length': '104', 'content-type': 'application/json'} 
 body={"name":"Tiffany Banks","department":"Geoscientist","position":"Dance movement psychotherapist","id":96} 
 </msg>
<msg timestamp="20250408 22:30:53.019" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250408 22:30:52.994" endtime="20250408 22:30:53.019"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250408 22:30:53.020" endtime="20250408 22:30:53.020"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20250408 22:30:53.020" endtime="20250408 22:30:53.020"/>
</return>
<msg timestamp="20250408 22:30:53.021" level="INFO">${response2} = {'name': 'Tiffany Banks', 'department': 'Geoscientist', 'position': 'Dance movement psychotherapist', 'id': 96}</msg>
<status status="PASS" starttime="20250408 22:30:52.994" endtime="20250408 22:30:53.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${employee_id2}</var>
<arg>${response2}[id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250408 22:30:53.022" level="INFO">${employee_id2} = 96</msg>
<status status="PASS" starttime="20250408 22:30:53.022" endtime="20250408 22:30:53.022"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${FRONTEND_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20250408 22:30:53.022" level="INFO">Opening url 'http://localhost:8080'</msg>
<status status="PASS" starttime="20250408 22:30:53.022" endtime="20250408 22:30:53.342"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>id:employeeContainer</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250408 22:30:53.342" endtime="20250408 22:30:53.405"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250408 22:30:55.407" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250408 22:30:53.406" endtime="20250408 22:30:55.407"/>
</kw>
<kw name="Select Multiple Employees">
<arg>${employee_id1}</arg>
<arg>${employee_id2}</arg>
<for flavor="IN">
<var>${id}</var>
<value>@{employee_ids}</value>
<iter>
<var name="${id}">95</var>
<kw name="Set Variable" library="BuiltIn">
<var>${checkbox_locator}</var>
<arg>id:check-${id}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250408 22:30:55.410" level="INFO">${checkbox_locator} = id:check-95</msg>
<status status="PASS" starttime="20250408 22:30:55.409" endtime="20250408 22:30:55.410"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${checkbox_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250408 22:30:55.410" endtime="20250408 22:30:55.486"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${checkbox_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250408 22:30:55.486" endtime="20250408 22:30:55.802"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250408 22:30:56.303" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250408 22:30:55.802" endtime="20250408 22:30:56.303"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${checkbox_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:56.305" level="INFO">Clicking element 'id:check-95'.</msg>
<status status="PASS" starttime="20250408 22:30:56.304" endtime="20250408 22:30:56.461"/>
</kw>
<status status="PASS" starttime="20250408 22:30:55.409" endtime="20250408 22:30:56.461"/>
</iter>
<iter>
<var name="${id}">96</var>
<kw name="Set Variable" library="BuiltIn">
<var>${checkbox_locator}</var>
<arg>id:check-${id}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250408 22:30:56.462" level="INFO">${checkbox_locator} = id:check-96</msg>
<status status="PASS" starttime="20250408 22:30:56.461" endtime="20250408 22:30:56.462"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${checkbox_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250408 22:30:56.462" endtime="20250408 22:30:56.503"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${checkbox_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250408 22:30:56.503" endtime="20250408 22:30:56.803"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250408 22:30:57.304" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250408 22:30:56.804" endtime="20250408 22:30:57.305"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${checkbox_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:57.306" level="INFO">Clicking element 'id:check-96'.</msg>
<status status="PASS" starttime="20250408 22:30:57.305" endtime="20250408 22:30:57.476"/>
</kw>
<status status="PASS" starttime="20250408 22:30:56.461" endtime="20250408 22:30:57.476"/>
</iter>
<status status="PASS" starttime="20250408 22:30:55.408" endtime="20250408 22:30:57.476"/>
</for>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>id:deleteSelectedBtn</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250408 22:30:57.476" endtime="20250408 22:30:57.537"/>
</kw>
<status status="PASS" starttime="20250408 22:30:55.407" endtime="20250408 22:30:57.537"/>
</kw>
<kw name="Delete Selected Employees">
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>id:deleteSelectedBtn</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250408 22:30:57.538" level="INFO">${delete_button} = id:deleteSelectedBtn</msg>
<status status="PASS" starttime="20250408 22:30:57.538" endtime="20250408 22:30:57.538"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250408 22:30:57.538" endtime="20250408 22:30:57.573"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250408 22:30:57.573" endtime="20250408 22:30:57.886"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250408 22:30:57.886" endtime="20250408 22:30:57.984"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250408 22:30:57.985" level="INFO">Clicking element 'id:deleteSelectedBtn'.</msg>
<status status="PASS" starttime="20250408 22:30:57.984" endtime="20250408 22:30:58.132"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250408 22:30:58.132" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250408 22:30:58.132" endtime="20250408 22:30:58.141"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250408 22:31:00.143" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250408 22:30:58.141" endtime="20250408 22:31:00.143"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>id:employeeContainer</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250408 22:31:00.143" endtime="20250408 22:31:00.173"/>
</kw>
<status status="PASS" starttime="20250408 22:30:57.537" endtime="20250408 22:31:00.173"/>
</kw>
<kw name="Verify Employee Does Not Exist">
<arg>${employee_data1}[name]</arg>
<kw name="Page Should Not Contain" library="SeleniumLibrary">
<arg>${employee_name}</arg>
<doc>Verifies the current page does not contain ``text``.</doc>
<msg timestamp="20250408 22:31:00.246" level="INFO">Current page does not contain text 'Paul Lopez'.</msg>
<status status="PASS" starttime="20250408 22:31:00.175" endtime="20250408 22:31:00.246"/>
</kw>
<status status="PASS" starttime="20250408 22:31:00.174" endtime="20250408 22:31:00.246"/>
</kw>
<kw name="Verify Employee Does Not Exist">
<arg>${employee_data2}[name]</arg>
<kw name="Page Should Not Contain" library="SeleniumLibrary">
<arg>${employee_name}</arg>
<doc>Verifies the current page does not contain ``text``.</doc>
<msg timestamp="20250408 22:31:00.289" level="INFO">Current page does not contain text 'Tiffany Banks'.</msg>
<status status="PASS" starttime="20250408 22:31:00.247" endtime="20250408 22:31:00.289"/>
</kw>
<status status="PASS" starttime="20250408 22:31:00.246" endtime="20250408 22:31:00.289"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Get Employee Via API</arg>
<arg>${employee_id1}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Employee Via API">
<arg>${employee_id1}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/${employee_id}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:31:02.332" level="INFO">GET Request : url=http://localhost:8000/employees/95 
 path_url=/employees/95 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250408 22:31:02.332" level="INFO">GET Response : url=http://localhost:8000/employees/95 
 status=404, reason=Not Found 
 headers={'date': 'Tue, 08 Apr 2025 17:01:01 GMT', 'server': 'uvicorn', 'content-length': '31', 'content-type': 'application/json'} 
 body={"detail":"Employee not found"} 
 </msg>
<msg timestamp="20250408 22:31:02.332" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20250408 22:31:00.290" endtime="20250408 22:31:02.332"/>
</kw>
<status status="PASS" starttime="20250408 22:31:00.290" endtime="20250408 22:31:02.333"/>
</kw>
<status status="PASS" starttime="20250408 22:31:00.290" endtime="20250408 22:31:02.333"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Get Employee Via API</arg>
<arg>${employee_id2}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Employee Via API">
<arg>${employee_id2}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>employee_api</arg>
<arg>/employees/${employee_id}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250408 22:31:02.341" level="INFO">GET Request : url=http://localhost:8000/employees/96 
 path_url=/employees/96 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate, zstd', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250408 22:31:02.341" level="INFO">GET Response : url=http://localhost:8000/employees/96 
 status=404, reason=Not Found 
 headers={'date': 'Tue, 08 Apr 2025 17:01:01 GMT', 'server': 'uvicorn', 'content-length': '31', 'content-type': 'application/json'} 
 body={"detail":"Employee not found"} 
 </msg>
<msg timestamp="20250408 22:31:02.341" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20250408 22:31:02.334" endtime="20250408 22:31:02.341"/>
</kw>
<status status="PASS" starttime="20250408 22:31:02.333" endtime="20250408 22:31:02.341"/>
</kw>
<status status="PASS" starttime="20250408 22:31:02.333" endtime="20250408 22:31:02.341"/>
</kw>
<status status="PASS" starttime="20250408 22:30:52.932" endtime="20250408 22:31:02.341"/>
</test>
<test id="s1-t7" name="Verify Page Titles" line="200">
<kw name="Go To" library="SeleniumLibrary">
<arg>${FRONTEND_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20250408 22:31:02.343" level="INFO">Opening url 'http://localhost:8080'</msg>
<status status="PASS" starttime="20250408 22:31:02.342" endtime="20250408 22:31:02.664"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>css:.navbar-brand</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250408 22:31:02.664" endtime="20250408 22:31:02.717"/>
</kw>
<kw name="Verify Page Title">
<kw name="Get Title" library="SeleniumLibrary">
<var>${title}</var>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20250408 22:31:02.730" level="INFO">${title} = Employee System</msg>
<status status="PASS" starttime="20250408 22:31:02.717" endtime="20250408 22:31:02.730"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${title}</arg>
<arg>Employee System</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250408 22:31:02.730" endtime="20250408 22:31:02.730"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>css:.navbar-brand</arg>
<arg>Employee System</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20250408 22:31:02.732" level="INFO">Verifying element 'css:.navbar-brand' contains exact text 'Employee System'.</msg>
<status status="PASS" starttime="20250408 22:31:02.730" endtime="20250408 22:31:02.780"/>
</kw>
<status status="PASS" starttime="20250408 22:31:02.717" endtime="20250408 22:31:02.780"/>
</kw>
<status status="PASS" starttime="20250408 22:31:02.342" endtime="20250408 22:31:02.780"/>
</test>
<kw name="Close All Browsers" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250408 22:31:02.781" endtime="20250408 22:31:09.214"/>
</kw>
<status status="PASS" starttime="20250408 22:30:37.416" endtime="20250408 22:31:09.214"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="Employee Tests">Employee Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
